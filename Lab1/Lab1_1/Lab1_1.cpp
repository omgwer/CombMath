#include <algorithm>

#include "iostream"
#include "vector"
#include <boost/timer.hpp>

/**
    1.1. [# 5]
        1) –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ù–∞—Ä–∞–π–∞–Ω—ã –ø–æ—Ä–æ–∂–¥–µ–Ω–∏—è –≤—Å–µ—Ö –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–æ–∫ —Å –≤—ã–≤–æ–¥–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –¥–æ —Å–æ—Ç—ã—Ö —Å–µ–∫—É–Ω–¥ –¥–ª—è ùëÅ=10.
        2) –ó–∞–ø–∏—Å–∞—Ç—å –≤—Ä–µ–º—è –ø–æ—Ä–æ–∂–¥–µ–Ω–∏—è –≤—Å–µ—Ö –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–æ–∫ –¥–ª—è ùëÅ=10, ùëÅ=15, ùëÅ=20 –±–µ–∑ –≤—ã–≤–æ–¥–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π.
        3) –û—Ü–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –≤—Ö–æ–¥–∞ ùëÅ=50 –∏ ùëÅ=100.
 */
int main(int argc, char* argv[])
{
    std::vector<size_t> v = {1,2,3,4,5,6,7,8};
    boost::timer t;
    t.restart();
    std::sort(v.begin(), v.end());
    do
    {
        copy(v.begin(), v.end(), std::ostream_iterator<size_t>(std::cout, " "));
        std::cout << std::endl;
    }
    while (std::next_permutation(v.begin(), v.end()));

    const double duration = t.elapsed();
    std::cout << duration << std::endl;
    return 0;
}
