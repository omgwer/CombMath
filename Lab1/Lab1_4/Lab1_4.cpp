#include <fstream>
#include <vector>

using namespace std;

vector<vector<int>> GenerateFullGraph(int);

/*1.4. [# 25] –ó–∞–¥–∞—á–∞ –∫–æ–º–º–∏–≤–æ—è–∂–µ—Ä–∞.
	–î–ª—è –≥—Ä–∞—Ñ–∞, –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –º–∞—Ç—Ä–∏—Ü–µ–π —Å–º–µ–∂–Ω–æ—Å—Ç–∏ –Ω–∞–π—Ç–∏ –≥–∞–º–∏–ª—å—Ç–æ–Ω–æ–≤ —Ü–∏–∫–ª –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º–∞—Ä–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏.–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –≥—Ä–∞—Ñ –∑–∞–¥–∞–Ω –º–∞—Ç—Ä–∏—Ü–µ–π —Å–º–µ–∂–Ω–æ—Å—Ç–∏.
	–†–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É –¥–ª—è ùëÅ=10, ùëÅ=15, –≥–¥–µ ùëÅ ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—Ä—à–∏–Ω –≤ –≥—Ä–∞—Ñ–µ. –û—Ü–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è –≤—Ö–æ–¥–∞ ùëÅ=20 –∏ ùëÅ=50.
*/
int main(int argc, char* argv[])
{
	int m_graphSize = 5;
	vector<vector<int>> graph = GenerateFullGraph(m_graphSize);
	
	return 0;
}

vector<vector<int>> GenerateFullGraph(int matrixSize)
{
	std::ofstream out("fullGraph.txt");
	out.clear();
	for (int j = 1; j <= matrixSize; j++)
	{
		for (int i = 1; i <= matrixSize; i++)
		{
			if (j < i)
			{
				out << j << " " << i << " " << (rand() % 50 + 1);
				if (j == (matrixSize - 1) && i == (matrixSize))
				{
					continue;
				}
				out << std::endl;
			}
		}
	}
	out.close();
	matrixSize++; // –Ω—É–∂–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω—É–ª—è–º–∏
	vector<vector<int>> matrix(matrixSize, vector<int>(matrixSize, INT32_MAX));
	ifstream in("fullGraph.txt");
	if (in.is_open()) {
		int x = 0, y = 0, weight = 0;
		while (!in.eof()) {  //init array
			in >> x >> y >> weight;
			matrix[x][y] = weight;
			matrix[y][x] = weight;
		}
	}
	in.close();
	return matrix;
}