#include <fstream>
#include <iostream>
#include <vector>
/*
2.5. [# 50] –†–∞—Å–∫—Ä–∞—Å–∏—Ç—å –∑–∞–¥–∞–Ω–Ω—ã–π –≥—Ä–∞—Ñ, –∏—Å–ø–æ–ª—å–∑—É—è –∞–ª–≥–æ—Ä–∏—Ç–º –ï—Ä—à–æ–≤–∞.
–í—Ö–æ–¥. –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ùë£ (1 ‚â§ ùë£ ‚â§ 400) ‚Äì
–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ—Ä—à–∏–Ω. –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö ùë£ —Å—Ç—Ä–æ–∫–∞—Ö —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –ø–æ ùë£ —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö
–ø—Ä–æ–±–µ–ª–∞–º–∏: –≤–µ—Å —Ä–µ–±–µ—Ä –º–µ–∂–¥—É –≤–µ—Ä—à–∏–Ω–∞–º–∏. –í–µ—Ä—à–∏–Ω—ã –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω—ã –æ—Ç 1 –¥–æ ùë£
–í—ã—Ö–æ–¥. –í ùë£ —Å—Ç—Ä–æ—á–∫–∞—Ö –≤—ã–≤–µ—Å—Ç–∏ –ø–æ –¥–≤–∞ —á–∏—Å–ª–∞: –Ω–æ–º–µ—Ä –≤–µ—Ä—à–∏–Ω (–æ—Ç 1 –¥–æ ùë£) –∏ –Ω–æ–º–µ—Ä —Ü–≤–µ—Ç–∞
–≤–µ—Ä—à–∏–Ω—ã (–Ω—É–º–µ—Ä–∞—Ü–∏—è —Ü–≤–µ—Ç–æ–≤ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1)
*/

using namespace std;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–∫—Ä–∞—Å–∫–∏ –≥—Ä–∞—Ñ–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ï—Ä—à–æ–≤–∞
vector<int> colorGraph(const vector<vector<int>>& graph) {
    int v = graph.size();
    vector<int> colors(v, 0); // –í–µ–∫—Ç–æ—Ä —Ü–≤–µ—Ç–æ–≤ –≤–µ—Ä—à–∏–Ω
    vector<bool> usedColors(v, false); // –í–µ–∫—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤

    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –≤–µ—Ä—à–∏–Ω–∞–º –≥—Ä–∞—Ñ–∞
    for (int i = 0; i < v; i++) {
        // –û–±–Ω—É–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—à–∏–Ω—ã
        for (int j = 0; j < v; j++) {
            usedColors[j] = false;
        }

        // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Å–æ—Å–µ–¥–Ω–∏–º –≤–µ—Ä—à–∏–Ω–∞–º –∏ –æ—Ç–º–µ—á–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞
        for (int j = 0; j < v; j++) {
            if (graph[i][j] == 1 && colors[j] != 0) {
                usedColors[colors[j] - 1] = true;
            }
            ++iterationCount;
        }

        // –ò—â–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—à–∏–Ω—ã
        int color;
        for (color = 1; color <= v; color++) {
            if (!usedColors[color - 1]) {
                break;
            }
        }

        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—à–∏–Ω—ã
        colors[i] = color;
    }

    return colors;
}

int main() {
    int v;
    ifstream in("test.txt");
    in >> v;

    // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∞
    vector<vector<int>> graph(v, vector<int>(v));
    for (int i = 0; i < v; i++) {
        for (int j = 0; j < v; j++) {
            in >> graph[i][j];
        }
    }

    // –†–∞—Å–∫—Ä–∞—Å–∫–∞ –≥—Ä–∞—Ñ–∞
    vector<int> colors = colorGraph(graph);

    // –í—ã–≤–æ–¥ –Ω–æ–º–µ—Ä–æ–≤ –≤–µ—Ä—à–∏–Ω –∏ –∏—Ö —Ü–≤–µ—Ç–æ–≤
    for (int i = 0; i < v; i++) {
        cout << (i + 1) << " " << colors[i] << endl;
    }


    cout << "Iterations = "<< iterationCount << endl;

    return 0;
}